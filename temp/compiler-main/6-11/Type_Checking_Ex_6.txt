STEPS TO EXECUTE:

1. yacc -d <filename>.yacc //yacc program compilation

2. ls //check files
	y.tab.c, y.tab.h

3. lex <filename>.lex //lex program compilation
	
4. ls //check files
	lex.yy.c

5. cc y.tab.c lex.yy.c //compilation of C program

6. ls //check files
	y.tab.o, lex.yy.o, a.out

7. ./a.out //show output


##########################################################################################################################################
//save file as type_checking.lex
LEX:

%{ 
#include<stdio.h> 
#include"y.tab.h" 
void yyerror(char *); 
int yylval; 
int yylineno; 
%} 
num [0-9] 
intg {num}{num}* 
floa {num}{num}*.({num}{1,2}) 
doub {num}{num}*.({num}{3,8}) 
%% 
{intg} { return INTEGER; } 
{floa} { return FLOAT; } 
{doub} { return DOUBLE; } 
[+=\n] return *yytext; 
[)( \t] {;} 
%% 
 int yywrap() 
{ 
return 1; 
} 


##########################################################################################################################################
//save file as type_checking.yacc
YACC:

%{#include<stdlib.h> 
#include<stdio.h> 
#include<math.h> 
int yylex(void); 
void yyerror(char *); 
int flag=0; 
%} 
%left '=' 
%left '+' 
%left '(' 
%token INTEGER 
%token FLOAT 
%token DOUBLE 
%% 
program: 
program E '\n' { 
if(flag==0) 
 { 
switch($2) 
{ 
case 1: printf("Integer\n"); break; 
case 2: printf("Float\n"); break; 
case 3: printf("Double\n"); break; 
case 4: printf("Boolean\n"); break; 
} 
 } 
} 
| 
; 
E: 
INTEGER { $$=1; } 
| 
FLOAT { $$=2; } 
| 
DOUBLE { $$=3; } 
| 
E '+' E { 
if($1==$3) 
 $$=$1; 
else 
 { 
if(($1==1 && $3==2) || ($1==2 && $3==1)) 
 $$=2; 
else if(($1==3 && $3==2) || ($1==2 && $3==3)) 
 $$=3; 
else 
{ 
printf("ERROR: Type mismatch\n"); 
flag=1; 
} 
 } 
} 
| 
E '=' '=' E { if($1==$4) $$=4; 
else 
{ 
printf("ERROR: Type mismatch\n"); 
flag=1; 
 } 
} 
| 
'(' E ')' { $$=$2; } 
| 
; 
%% 
void yyerror(char *s) 
{ 
fprintf(stderr,"%s\n",s); 
} 
int main(void) 
{ 
yyparse(); 
return 0; 
} 
